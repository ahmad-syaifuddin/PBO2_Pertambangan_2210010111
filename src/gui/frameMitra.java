/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import com.formdev.flatlaf.FlatLightLaf;
import config.crud;
import config.dynamic;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author User
 */
public class frameMitra extends javax.swing.JFrame {
String judulKolom[]={"ID Mitra", "Nama CV", "Alamat", "Telepon"};
int lebarKolom[]={250,200,210,200};
String sql="SELECT * FROM mitra";

private crud cruddb;
private dynamic formHandler;
private boolean isFormClean = true;  // Variabel untuk melacak status kebersihan form

    /**
     * Creates new form frameMitra
     */
    public frameMitra() {
        try {
            // Set Look and Feel ke Nimbus
        UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e) {
            e.printStackTrace();
        }
        initComponents();
        this.setLocationRelativeTo(null); // meletakan posisi form berada ditengah windows
        cruddb = new crud();
        
        // Inisialisasi form handler
        initializeFormFields();
        
        loaddata();
}
    
     private void initializeFormFields() {
        formHandler = new dynamic();
        formHandler.addField("id_mitra", txtMitra);
        formHandler.addField("nama_cv", txtNamaCV);
        formHandler.addField("alamat", txtAlamat);
        formHandler.addField("telp", txtTelp);
    }
     
        void loaddata(){
        cruddb.settingJudulTabel(tblMitra, judulKolom);
        cruddb.settingLebarKolom(tblMitra, lebarKolom);
        cruddb.tampilTabel(tblMitra, sql, judulKolom);}
        
        
   
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBersih = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMitra = new javax.swing.JTextField();
        txtAlamat = new javax.swing.JTextField();
        txtTelp = new javax.swing.JTextField();
        txtNamaCV = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMitra = new javax.swing.JTable();
        btnCetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Form Input Data Mitra");

        btnSimpan.setBackground(new java.awt.Color(0, 153, 0));
        btnSimpan.setForeground(new java.awt.Color(255, 255, 255));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setBackground(new java.awt.Color(0, 102, 204));
        btnUbah.setForeground(new java.awt.Color(255, 255, 255));
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 0, 0));
        btnHapus.setForeground(new java.awt.Color(204, 255, 255));
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnBersih.setText("Bersih");
        btnBersih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBersihActionPerformed(evt);
            }
        });

        jLabel2.setText("Alamat");

        jLabel3.setText("Nama CV");

        jLabel4.setText("ID Mitra");

        jLabel5.setText("Telepon");

        tblMitra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMitra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMitraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMitra);

        btnCetak.setBackground(new java.awt.Color(255, 255, 51));
        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNamaCV, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMitra, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnSimpan)
                        .addGap(8, 8, 8)
                        .addComponent(btnUbah)
                        .addGap(6, 6, 6)
                        .addComponent(btnHapus))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnBersih)
                        .addGap(18, 18, 18)
                        .addComponent(btnCetak)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel3)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel2)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtMitra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNamaCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSimpan)
                            .addComponent(btnUbah)
                            .addComponent(btnHapus))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBersih)
                            .addComponent(btnCetak))))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        // Mendapatkan fields dan values secara dinamis
        String[] fields = formHandler.getFieldNames();
        String[] values = formHandler.getFieldValues();
        
        // Cek field kosong
        if (formHandler.hasEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
            return;
        }
        
        // Cek duplicate key
        if (cruddb.DuplicateKey("mitra", "id_mitra", values[0])) {
            JOptionPane.showMessageDialog(this, "ID Mitra sudah ada!");
            return;
        }
        
        cruddb.simpanDinamis("mitra", fields, values);
        loaddata();

    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        String[] fields = formHandler.getFieldNames();
        String[] values = formHandler.getFieldValues();
        
         if (txtMitra.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "Tidak ada data yang diubah!");
        return;
    }
         // Konfirmasi perubahan data
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin mengubah data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Update data berdasarkan ID
        cruddb.UbahDinamis("mitra", "id_mitra", txtMitra.getText(), fields, values);
            loaddata();
        }

    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        
        String id = txtMitra.getText();

         // Validasi jika ID kosong
        if (id.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Pilih data yang akan dihapus!");
        return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this,
            "Apakah anda yakin ingin menghapus data ini?",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            cruddb.HapusDinamis("mitra", "id_mitra", txtMitra.getText());
            bersihForm();
            loaddata();
        }

    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBersihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBersihActionPerformed
        // TODO add your handling code here:
        // Panggil fungsi bersihForm untuk membersihkan form
        bersihForm();
    
    // Cek jika semua field sudah kosong
    if (isFormEmpty()) {
        // Tampilkan pesan hanya jika form benar-benar kosong dan belum menampilkan pesan sebelumnya
        if (isFormClean) {
            JOptionPane.showMessageDialog(this, "Field sudah bersih semua cuy :)");
            isFormClean = false;  // Tandai form sebagai sudah bersih;
        }
    } else {
        isFormClean = true;  // Tandai form sebagai tidak kosong (misalnya pengguna memasukkan teks atau memilih item)
    }
    }//GEN-LAST:event_btnBersihActionPerformed

    private void tblMitraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMitraMouseClicked
        // Mendapatkan indeks baris yang dipilih
    int selectedRow = tblMitra.getSelectedRow();
    
    // Memeriksa apakah ada baris yang dipilih
    if (selectedRow != -1) {
        // Mengambil data dari baris yang dipilih
        String idMitra = tblMitra.getValueAt(selectedRow, 0).toString();
        String namaCV = tblMitra.getValueAt(selectedRow, 1).toString();
        String alamat = tblMitra.getValueAt(selectedRow, 2).toString();
        String telp = tblMitra.getValueAt(selectedRow, 3).toString();

//        Contoh ampun bapak
//        int baris=tblMitra.getSelectedRow();
//        txtMitra.setText(tblMitra.getValueAt(baris, 0).toString());
//        txtAlamat.setText(tblAlamat.getValueAt(baris, 0).toString());
//        txtNamaCV.setText(tblMitra.getValueAt(baris, 0).toString());
//        txtTelp.setText(tblMitra.getValueAt(baris, 0).toString());

//        String idMitra = tblMitra.getValueAt(baris, 0).toString();
//        String namaCV = tblMitra.getValueAt(baris, 1).toString();
//        String alamat = tblMitra.getValueAt(baris, 2).toString();
//        String telp = tblMitra.getValueAt(baris, 3).toString();

        // Mengisi field input dengan data yang diambil
        txtMitra.setText(idMitra);
        txtNamaCV.setText(namaCV);
        txtAlamat.setText(alamat);
        txtTelp.setText(telp);
    }
    }//GEN-LAST:event_tblMitraMouseClicked

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
    try {
        // TODO add your handling code here:
        cruddb.tampilLaporan("src/laporan/reportMitra.jrxml", "select * from mitra");
    } catch (SQLException ex) {
        Logger.getLogger(frameMitra.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnCetakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameMitra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameMitra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameMitra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameMitra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameMitra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBersih;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMitra;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JTextField txtMitra;
    private javax.swing.JTextField txtNamaCV;
    private javax.swing.JTextField txtTelp;
    // End of variables declaration//GEN-END:variables

// Method helper untuk membersihkan form
//private void bersihForm() {
//    txtMitra.setText("");
//    txtAlamat.setText("");
//    txtNamaCV.setText("");
//    txtTelp.setText("");
//    txtMitra.requestFocus();
//}
    
private void bersihForm() {
    // Iterasi melalui semua komponen di content pane
    for (java.awt.Component component : this.getContentPane().getComponents()) {
        // Memeriksa apakah komponen tersebut adalah JTextField
        if (component instanceof javax.swing.JTextField) {
            // Membersihkan setiap JTextField
            ((javax.swing.JTextField) component).setText("");
        }
    }
    // Fokuskan kembali ke field pertama (txtIDAuthor) setelah pembersihan
    txtMitra.requestFocus();
}

// Method Dinamis untuk memeriksa apakah form kosong
    private boolean isFormEmpty() {
     // Iterasi melalui semua komponen di content pane
    for (java.awt.Component component : this.getContentPane().getComponents()) {
        // Memeriksa apakah komponen tersebut adalah JTextField
        if (component instanceof javax.swing.JTextField) {
            // Membersihkan setiap JTextField
            ((javax.swing.JTextField) component).setText("");
        }
        // Memeriksa apakah komponen adalah JComboBox
        else if (component instanceof javax.swing.JComboBox) {
            if (((javax.swing.JComboBox) component).getSelectedIndex() != 0) {
                return false; // Jika JComboBox tidak dalam kondisi default, return false
            }
        }
        // Memeriksa apakah komponen adalah JTextArea
        else if (component instanceof javax.swing.JTextArea) {
            if (!((javax.swing.JTextArea) component).getText().isEmpty()) {
                return false; // Jika JTextArea tidak kosong, return false
            }
        }
    }
    // Semua field kosong
    return true;
}

}
