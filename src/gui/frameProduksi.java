/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import com.formdev.flatlaf.FlatLightLaf;
import config.crud;
import config.dynamic;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author User
 */
public class frameProduksi extends javax.swing.JFrame {
String judulKolom[]={"ID Produksi", "Tanggal", "Shift", "ID Truk", "ID Stokpile", "Muatan", "Kosong", "Volume"};
int lebarKolom[]={50,200,100,200,200,200,200,200};
String sql="SELECT * FROM produksi";

private crud cruddb;
private dynamic formHandler;
private boolean isFormClean = true;  // Variabel untuk melacak status kebersihan form
    /**
     * Creates new form frameProduksi
     */
    public frameProduksi() {
        try {
            // Set Look and Feel ke Nimbus
        UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e) {
            e.printStackTrace();
        }
        initComponents();
        this.setLocationRelativeTo(null); // meletakan posisi form berada ditengah windows
        cruddb = new crud();
        
        
        // Inisialisasi form handler
        initializeFormFields();
        
        loaddata();
}       
        private void initializeFormFields() {
        formHandler = new dynamic();
        formHandler.addField("id_produksi", txtIDProduksi);
        formHandler.addField("tgl",jCalendarComboBox1);
        formHandler.addField("shift", comboBoxShift);
        formHandler.addField("id_truk", txtIDTruk);
        formHandler.addField("id_stokpile", txtIDStokPile);
        formHandler.addField("muatan", txtMuatan);
        formHandler.addField("kosong", txtKosong);
        formHandler.addField("volume", txtVol);

    }
   
        void loaddata(){
        cruddb.settingJudulTabel(tableProduksi, judulKolom);
        cruddb.settingLebarKolom(tableProduksi, lebarKolom);
        cruddb.tampilTabel(tableProduksi, sql, judulKolom);}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBersih = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtIDProduksi = new javax.swing.JTextField();
        txtIDStokPile = new javax.swing.JTextField();
        txtIDTruk = new javax.swing.JTextField();
        txtMuatan = new javax.swing.JTextField();
        txtKosong = new javax.swing.JTextField();
        txtVol = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduksi = new javax.swing.JTable();
        btnCetak = new javax.swing.JButton();
        jCalendarComboBox1 = new de.wannawork.jcalendar.JCalendarComboBox();
        comboBoxShift = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Form Input Data Produksi");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 63, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        btnSimpan.setBackground(new java.awt.Color(51, 153, 0));
        btnSimpan.setForeground(new java.awt.Color(255, 255, 255));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 22, 0, 0);
        getContentPane().add(btnSimpan, gridBagConstraints);

        btnUbah.setBackground(new java.awt.Color(0, 102, 255));
        btnUbah.setForeground(new java.awt.Color(255, 255, 255));
        btnUbah.setText("Ubah");
        btnUbah.setMaximumSize(new java.awt.Dimension(73, 23));
        btnUbah.setMinimumSize(new java.awt.Dimension(73, 23));
        btnUbah.setPreferredSize(new java.awt.Dimension(73, 23));
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 2, 0, 0);
        getContentPane().add(btnUbah, gridBagConstraints);

        btnHapus.setBackground(new java.awt.Color(255, 0, 0));
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 51;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 6, 0, 0);
        getContentPane().add(btnHapus, gridBagConstraints);

        btnBersih.setText("Bersih");
        btnBersih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBersihActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.gridheight = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 56, 6, 0);
        getContentPane().add(btnBersih, gridBagConstraints);

        jLabel2.setText("ID Produksi (harus angka)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 18, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Tanggal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 18, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Shift");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 18, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText("ID Truk (harus angka)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 18, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setText("Muatan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 18, 0, 0);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setText("Kosong");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 19, 0, 0);
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel9.setText("Volume (harus angka)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 19, 0, 0);
        getContentPane().add(jLabel9, gridBagConstraints);

        txtIDProduksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDProduksiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 0, 0);
        getContentPane().add(txtIDProduksi, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 6, 0, 0);
        getContentPane().add(txtIDStokPile, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 0, 0);
        getContentPane().add(txtIDTruk, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 0);
        getContentPane().add(txtMuatan, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 0, 0);
        getContentPane().add(txtKosong, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 0, 0);
        getContentPane().add(txtVol, gridBagConstraints);

        jLabel8.setText("ID StokPile (harus angka)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 18, 0, 0);
        getContentPane().add(jLabel8, gridBagConstraints);

        tableProduksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProduksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProduksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProduksi);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 91;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 448;
        gridBagConstraints.ipady = 388;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 12, 0, 6);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        btnCetak.setBackground(new java.awt.Color(255, 255, 51));
        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 26;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 14;
        gridBagConstraints.gridheight = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 6, 0);
        getContentPane().add(btnCetak, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 6, 0, 0);
        getContentPane().add(jCalendarComboBox1, gridBagConstraints);

        comboBoxShift.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pagi", "Siang", "Sore", "Malam" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 39;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 78;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 0, 0);
        getContentPane().add(comboBoxShift, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        
        // Mendapatkan fields dan values secara dinamis
        String[] fields = formHandler.getFieldNames();
        String[] values = formHandler.getFieldValues();
        
       // Cek field kosong
        if (formHandler.hasEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
            return;
        }

        if (cruddb.DuplicateKey("produksi", "id_produksi", values[0])) {
            JOptionPane.showMessageDialog(this, "Kode Produksi sudah ada!");
            return;
        }

        cruddb.simpanDinamis("produksi", fields, values);
        loaddata(); // Merefresh isi table 
//        cruddb.tampilTabel(tableProduksi, sql, judulKolom); // Refresh table
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        
        String[] fields = formHandler.getFieldNames();
        String[] values = formHandler.getFieldValues();
        
         if (txtIDProduksi.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "Tidak ada data yang diubah!");
        return;
    }
    
          // Konfirmasi perubahan data
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin mengubah data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Update data berdasarkan ID
        cruddb.UbahDinamis("produksi", "id_produksi", txtIDProduksi.getText(), fields, values);
        loaddata();
//            cruddb.tampilTabel(tableProduksi, sql, judulKolom); // Refresh table
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        
        String id = txtIDProduksi.getText();

         // Validasi jika ID kosong
        if (id.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Pilih data yang akan dihapus!");
        return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this,
            "Apakah anda yakin ingin menghapus data ini?",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            cruddb.HapusDinamis("produksi", "id_produksi", txtIDProduksi.getText());
            bersihForm();
            loaddata();
//            cruddb.tampilTabel(tableProduksi, sql, judulKolom); // Refresh table
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBersihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBersihActionPerformed
        
        bersihForm();
        
        // Cek jika semua field sudah kosong
    if (isFormEmpty()) {
        // Tampilkan pesan hanya jika form benar-benar kosong dan belum menampilkan pesan sebelumnya
        if (isFormClean) {
            JOptionPane.showMessageDialog(this, "Field sudah bersih semua cuy :)");
            isFormClean = false;  // Tandai form sebagai sudah bersih;
        }
    } else {
        isFormClean = true;  // Tandai form sebagai tidak kosong (misalnya pengguna memasukkan teks atau memilih item)
    }
    }//GEN-LAST:event_btnBersihActionPerformed

    private void txtIDProduksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDProduksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDProduksiActionPerformed

    private void tableProduksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProduksiMouseClicked
        // Mendapatkan indeks baris yang dipilih
    int selectedRow = tableProduksi.getSelectedRow();
    
    // Format tanggal untuk jCalendarComboBox1
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String tanggal = tableProduksi.getValueAt(selectedRow, 1).toString();
            jCalendarComboBox1.setDate(sdf.parse(tanggal));
        } catch (Exception e) {
            System.err.println(e.toString());
        }
        
    // Memeriksa apakah ada baris yang dipilih
    if (selectedRow != -1) {
        // Mengambil data dari baris yang dipilih
        String idProduksi = tableProduksi.getValueAt(selectedRow, 0).toString();
        String shift = tableProduksi.getValueAt(selectedRow, 2).toString();
        String idTruk = tableProduksi.getValueAt(selectedRow, 3).toString();
        String idStokPile = tableProduksi.getValueAt(selectedRow, 4).toString();
        String muatan = tableProduksi.getValueAt(selectedRow, 5).toString();
        String kosong = tableProduksi.getValueAt(selectedRow, 6).toString();
        String volume = tableProduksi.getValueAt(selectedRow, 7).toString();

        // Mengisi field input dengan data yang diambil
        txtIDProduksi.setText(idProduksi);
        comboBoxShift.setSelectedItem(shift);
        txtIDTruk.setText(idTruk);
        txtIDStokPile.setText(idStokPile);
        txtMuatan.setText(muatan);
        txtKosong.setText(kosong);
        txtVol.setText(volume);
    }
    }//GEN-LAST:event_tableProduksiMouseClicked

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
    try {
        // TODO add your handling code here:
        cruddb.tampilLaporan("src/laporan/reportProduksi.jrxml", "select * from produksi");
    } catch (SQLException ex) {
        Logger.getLogger(frameProduksi.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_btnCetakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameProduksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameProduksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameProduksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameProduksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameProduksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBersih;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> comboBoxShift;
    private de.wannawork.jcalendar.JCalendarComboBox jCalendarComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProduksi;
    private javax.swing.JTextField txtIDProduksi;
    private javax.swing.JTextField txtIDStokPile;
    private javax.swing.JTextField txtIDTruk;
    private javax.swing.JTextField txtKosong;
    private javax.swing.JTextField txtMuatan;
    private javax.swing.JTextField txtVol;
    // End of variables declaration//GEN-END:variables

// Method helper untuk membersihkan form
//private void bersihForm() {
//    txtIDProduksi.setText("");
//    txtIDStokPile.setText("");
//    txtIDTruk.setText("");
//    FormattedtxtTanggal.setText("");
//    txtShift.setText("");
//    txtVol.setText("");
//    txtMuatan.setText("");
//    txtKosong.setText("");
//    txtIDProduksi.requestFocus();
//}
    
private void bersihForm() {
    // Iterasi melalui semua komponen di content pane
    for (java.awt.Component component : this.getContentPane().getComponents()) {
        // Memeriksa apakah komponen tersebut adalah JTextField
        if (component instanceof javax.swing.JTextField) {
            // Membersihkan setiap JTextField
            ((javax.swing.JTextField) component).setText("");
        }
    }
    // Fokuskan kembali ke field pertama (txtIDAuthor) setelah pembersihan
    txtIDProduksi.requestFocus();
}

// Method Dinamis untuk memeriksa apakah form kosong
    private boolean isFormEmpty() {
     // Iterasi melalui semua komponen di content pane
    for (java.awt.Component component : this.getContentPane().getComponents()) {
        // Memeriksa apakah komponen tersebut adalah JTextField
        if (component instanceof javax.swing.JTextField) {
            // Membersihkan setiap JTextField
            ((javax.swing.JTextField) component).setText("");
        }
        // Memeriksa apakah komponen adalah JComboBox
        else if (component instanceof javax.swing.JComboBox) {
            if (((javax.swing.JComboBox) component).getSelectedIndex() != 0) {
                return false; // Jika JComboBox tidak dalam kondisi default, return false
            }
        }
        // Memeriksa apakah komponen adalah JTextArea
        else if (component instanceof javax.swing.JTextArea) {
            if (!((javax.swing.JTextArea) component).getText().isEmpty()) {
                return false; // Jika JTextArea tidak kosong, return false
            }
        }
    }
    // Semua field kosong
    return true;
}
}